name: Release Builds

on: push

env:
  LLVM_VERSION: "14.0.6"

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-20.04
    env:
      INSTALL_PREFIX: "/opt/smelibs"
      SUDO_CMD: "sudo"
      TARGET_TRIPLE: "x86_64-unknown-linux-gnu"
      PYTHON_EXE: "/usr/bin/python3"
      OS: "linux"
      CC: "clang"
      CXX: "clang++"
    defaults:
      run:
        shell: bash
    steps:
      - name: Add llvm repo for clang 14 & install
        run: |
          sudo wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo add-apt-repository "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-14 main"
          sudo apt update -yy
          sudo apt install -yy clang-14
      - name: Set clang version
        run: |
          sudo update-alternatives --remove-all clang || echo "nothing to remove"
          sudo update-alternatives --remove-all clang++ || echo "nothing to remove"
          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-14 100
          sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-14 100
      - uses: actions/checkout@v3
      - name: Build script
        run: ./build.sh
      - uses: actions/upload-artifact@v3
        with:
          path: ./artefacts/*

  macos:
    name: MacOS
    runs-on: macos-11
    env:
      INSTALL_PREFIX: "/opt/smelibs"
      SUDO_CMD: "sudo"
      TARGET_TRIPLE: "x86_64-apple-darwin16"
      PYTHON_EXE: "/usr/bin/python3"
      MACOSX_DEPLOYMENT_TARGET: "10.14"
      OS: "osx"
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v3
      - name: Build script
        run: ./build.sh
      - uses: actions/upload-artifact@v3
        with:
          path: ./artefacts/*

  win64-mingw:
    name: Windows 64-bit Mingw
    runs-on: windows-2022
    env:
      INSTALL_PREFIX: "/c/smelibs"
      SUDO_CMD: ""
      TARGET_TRIPLE: "x86_64-w64-windows-gnu"
      PYTHON_EXE: "/mingw64/bin/python"
      OS: "win64-mingw"
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v3
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: mingw-w64-x86_64-gcc mingw-w64-x86_64-cmake mingw-w64-x86_64-python make
      - name: Build script
        run: ./build.sh
      - uses: actions/upload-artifact@v3
        with:
          path: ./artefacts/*

  release:
    name: Upload Binaries to GitHub Release
    needs: [linux, macos, win64-mingw]
    runs-on: ubuntu-latest
    # upload binaries to github release if commit is tagged
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: binaries
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: binaries/*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
